
&НаКлиенте
Процедура СформироватьОтчет(Команда)
	
	// заполним параметры: период и долговое обязательство
	ПараметрыОтчета = Новый Структура;
	ПараметрыОтчета.Вставить("Должник", Должник);
	ПараметрыОтчета.Вставить("Валюта", Валюта);
	ПараметрыОтчета.Вставить("ВалютаНеЗаполнена", Не ЗначениеЗаполнено(Валюта));
	ПараметрыОтчета.Вставить("НачалоПериода", НачалоПериода);
	ПараметрыОтчета.Вставить("КонецПериода", КонецПериода);
	
	ОбработатьРасшифровку(Результат, ПараметрыОтчета);
	
КонецПроцедуры

Процедура ОбработатьРасшифровку(ТабличныйДокумент, ПараметрыОтчета) Экспорт
	
	ТабличныйДокумент.Очистить();
	
	ОтчетОбъект = РеквизитФормыВЗначение("Отчет");
	СхемаКомпоновкиДанных = ОтчетОбъект.ПолучитьМакет("ОсновнаяСхемаКомпоновкиДанных");

	ИсполняемыеНастройки = ОтчетОбъект.КомпоновщикНастроек.Настройки;
	УстановитьПараметрДанных(ИсполняемыеНастройки.ПараметрыДанных, "Должник", ПараметрыОтчета.Должник);
	УстановитьПараметрДанных(ИсполняемыеНастройки.ПараметрыДанных, "НачалоПериода", ПараметрыОтчета.НачалоПериода);
	УстановитьПараметрДанных(ИсполняемыеНастройки.ПараметрыДанных, "КонецПериода", ПараметрыОтчета.КонецПериода);
	УстановитьПараметрДанных(ИсполняемыеНастройки.ПараметрыДанных, "Валюта", ПараметрыОтчета.Валюта);
	УстановитьПараметрДанных(ИсполняемыеНастройки.ПараметрыДанных, "ВалютаНеЗаполнена", ПараметрыОтчета.ВалютаНеЗаполнена);
	
	ЗаполнитьЗначенияСвойств(ЭтаФорма, ПараметрыОтчета);
	
	ДанныеРасшифровкиСКД = Новый ДанныеРасшифровкиКомпоновкиДанных;
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновкиДанных = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, ИсполняемыеНастройки, ДанныеРасшифровкиСКД);
	
	ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновкиДанных, , ДанныеРасшифровкиСКД);
	
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(ТабличныйДокумент);
	ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);
	
	ДанныеРасшифровки = ПоместитьВоВременноеХранилище(ДанныеРасшифровкиСКД, УникальныйИдентификатор);
	
КонецПроцедуры

//&НаКлиенте
Функция НайтиПараметрПНСКД(КоллекцияПараметров, ИмяПараметра) 
	
	НайденныеПараметр = Неопределено;
	ПараметрПоиска = Новый ПараметрКомпоновкиДанных(ИмяПараметра);
	
	Для Каждого Параметр Из КоллекцияПараметров Цикл
		
		Если Параметр.Параметр = ПараметрПоиска Тогда
			НайденныеПараметр = Параметр;
			Прервать;
		КонецЕсли; 
		
	КонецЦикла;	 
	
	Возврат НайденныеПараметр;
	
КонецФункции

//&НаКлиенте
Процедура ЗаполнитьПараметрПНСКД(КоллекцияПараметров, ИмяПараметра, ЗначениеПараметра)
	
	Параметр = НайтиПараметрПНСКД(КоллекцияПараметров, ИмяПараметра);
	Если Параметр <> Неопределено Тогда 
		Параметр.Значение = ЗначениеПараметра;	
		Параметр.Использование = Истина;
	КонецЕсли;		
	
КонецПроцедуры	

&НаКлиенте
Процедура РезультатОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;      
	
	СтруктураРасшифровки = ОбщегоНазначенияСервер.ПолучитьСтруктуруРасшифровки(Расшифровка, ЭтаФорма.ДанныеРасшифровки);
	
	Если СтруктураРасшифровки.Свойство("Регистратор") Тогда
		ОткрытьЗначение(СтруктураРасшифровки.Регистратор);
	КонецЕсли;	
	
КонецПроцедуры
