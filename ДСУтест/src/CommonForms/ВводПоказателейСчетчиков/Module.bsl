
// СОБЫТИЯ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Дата = ТекущаяДата();
	ПредыдущаяДата = Дата;
	ПрочитатьПоказателиСчетчиков();
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	Если Модифицированность Тогда 
		
		Ответ = ВопросАсинх("Данные были изменены. Сохранить изменения?", РежимДиалогаВопрос.ДаНетОтмена);
		
		Если Ответ = КодВозвратаДиалога.Да Тогда
			ЗаписатьНаСервере();
		ИначеЕсли Ответ = КодВозвратаДиалога.Отмена Тогда
			Отказ = Истина;
		КонецЕсли;
		
	КонецЕсли;	
	
КонецПроцедуры

// КОМАНДЫ ЭЛЕМЕНТОВ УПРАВЛЕНИЯ ФОРМЫ
	
&НаКлиенте
Процедура Записать(Команда)
	
	ЗаписатьНаСервере(); 
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	
	Если Модифицированность Тогда 
		
		Ответ = ВопросАсинх("Данные были изменены. Сохранить изменения?", РежимДиалогаВопрос.ДаНетОтмена);
		
		Если Ответ = КодВозвратаДиалога.Да Тогда
			
			ВременнаяДата = Дата;
			Дата = ПредыдущаяДата;
			ЗаписатьНаСервере();
			Дата = ВременнаяДата;
			ПрочитатьПоказателиСчетчиков();
			
		ИначеЕсли Ответ = КодВозвратаДиалога.Нет Тогда
			
			ПрочитатьПоказателиСчетчиков();
			Модифицированность = Ложь;
			
		ИначеЕсли Ответ = КодВозвратаДиалога.Отмена Тогда
			Дата = ПредыдущаяДата;
		КонецЕсли;
		
	Иначе
		
		ПрочитатьПоказателиСчетчиков();
		
	КонецЕсли;	
	
	ПредыдущаяДата = Дата;
	РазвернутьВетвиДерева();
	
КонецПроцедуры


&НаКлиенте
Процедура ДеревоПоказателейПриИзменении(Элемент)
	
	Модифицированность = Истина;

КонецПроцедуры

// СЕРВЕРНЫЕ ПРОЦЕДУРЫ

// ЗаписатьНаСервере - записывает в базу значения показателей счетчиков
Процедура ЗаписатьНаСервере()
	
	НаборЗаписей = РегистрыСведений.ПоказанияСчётчиков.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Период.Установить(Дата);
	
	Для Каждого ВетвьГруппы Из ДеревоПоказателей.ПолучитьЭлементы() Цикл
		
		Для Каждого ВетвьСчетчика Из ВетвьГруппы.ПолучитьЭлементы() Цикл
			
			Запись 			= НаборЗаписей.Добавить();
			Запись.Счётчик 	= ВетвьСчетчика.Счетчик;
			Запись.Период 	= Дата;
			Запись.ЗначениеПоказателя = ВетвьСчетчика.ТекущееПоказание;
			
		КонецЦикла;	
		
	КонецЦикла;	
	
	НаборЗаписей.Записать();
	Модифицированность = Ложь;
	
КонецПроцедуры	

&НаСервере
Процедура ПрочитатьПоказателиСчетчиков()
	
	ДеревоПоказателей.ПолучитьЭлементы().Очистить();
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ТаблицаРеквизитов.ИмяРеквизита КАК ИмяРеквизита,
	               |	ТаблицаРеквизитов.Счётчик КАК Счётчик
	               |ПОМЕСТИТЬ ТаблицаСчетчиков
	               |ИЗ
	               |	&ТаблицаРеквизитов КАК ТаблицаРеквизитов
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ПоказанияСчётчиков.Счётчик КАК Счётчик,
	               |	ПоказанияСчётчиков.ЗначениеПоказателя КАК ЗначениеПоказателя
	               |ПОМЕСТИТЬ ПоказанияСчетчиков
	               |ИЗ
	               |	РегистрСведений.ПоказанияСчётчиков КАК ПоказанияСчётчиков
	               |ГДЕ
	               |	ПоказанияСчётчиков.Период = &Период
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ПоказанияСчётчиковСрезПоследних.Период КАК ДатаПредыдущегоПоказания,
	               |	ПоказанияСчётчиковСрезПоследних.ЗначениеПоказателя КАК ПредыдущееЗначениеПоказателя,
	               |	ТаблицаСчетчиков.Счётчик КАК Счётчик
	               |ПОМЕСТИТЬ ПредыдущиеПоказания
	               |ИЗ
	               |	ТаблицаСчетчиков КАК ТаблицаСчетчиков
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПоказанияСчётчиков.СрезПоследних(&Период, ) КАК ПоказанияСчётчиковСрезПоследних
	               |		ПО ТаблицаСчетчиков.Счётчик = ПоказанияСчётчиковСрезПоследних.Счётчик
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ТаблицаСчетчиков.ИмяРеквизита КАК ИмяРеквизита,
	               |	ЕСТЬNULL(ПоказанияСчетчиков.ЗначениеПоказателя, 0) КАК ЗначениеПоказателя,
	               |	ЕСТЬNULL(ПредыдущиеПоказания.ДатаПредыдущегоПоказания, 0) КАК ДатаПредыдущегоПоказания,
	               |	ЕСТЬNULL(ПредыдущиеПоказания.ПредыдущееЗначениеПоказателя, 0) КАК ПредыдущееЗначениеПоказателя
	               |ИЗ
	               |	ТаблицаСчетчиков КАК ТаблицаСчетчиков
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ПоказанияСчетчиков КАК ПоказанияСчетчиков
	               |		ПО ТаблицаСчетчиков.Счётчик = ПоказанияСчетчиков.Счётчик
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ПредыдущиеПоказания КАК ПредыдущиеПоказания
	               |		ПО ТаблицаСчетчиков.Счётчик = ПредыдущиеПоказания.Счётчик";
	Запрос.УстановитьПараметр("ТаблицаРеквизитов", РеквизитФормыВЗначение("ТаблицаСоответствияРеквизитов"));
	Запрос.УстановитьПараметр("Период", Дата);
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		 ЭтаФорма[Выборка.ИмяРеквизита] = Выборка.ЗначениеПоказателя;
		 ЭтаФорма["Предыдущее" + Выборка.ИмяРеквизита] = Выборка.ПредыдущееЗначениеПоказателя;
		 ЭтаФорма["ДатаПредыдущего" + Выборка.ИмяРеквизита] = Выборка.ДатаПредыдущегоПоказания;
		
	КонецЦикла;	
	 
	Запрос.Текст = "ВЫБРАТЬ
	               |	Счетчики.Наименование КАК Наименование,
	               |	Счетчики.СерийныйНомер КАК СерийныйНомер,
	               |	Счетчики.Ссылка КАК Счетчик,
	               |	Счетчики.ЭтоГруппа КАК ЭтоГруппа,
	               |	ЕСТЬNULL(ПоказанияСчётчиков.ЗначениеПоказателя, 0) КАК ТекущееПоказание,
	               |	ЕСТЬNULL(ПоказанияСчётчиковСрезПоследних.ЗначениеПоказателя, 0) КАК ПредыдущееПоказание,
	               |	ЕСТЬNULL(ПоказанияСчётчиковСрезПоследних.Период, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаПредыдущегоПоказания
	               |ИЗ
	               |	Справочник.Счетчики КАК Счетчики
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПоказанияСчётчиков.СрезПоследних(&ДатаСреза, ) КАК ПоказанияСчётчиковСрезПоследних
	               |		ПО Счетчики.Ссылка = ПоказанияСчётчиковСрезПоследних.Счётчик
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПоказанияСчётчиков КАК ПоказанияСчётчиков
	               |		ПО Счетчики.Ссылка = ПоказанияСчётчиков.Счётчик
	               |			И (ПоказанияСчётчиков.Период = &Период)
	               |ГДЕ
	               |	НЕ Счетчики.ПометкаУдаления
	               |	И НЕ Счетчики.ЭтоГруппа
	               |ИТОГИ ПО
	               |	Счетчик ТОЛЬКО ИЕРАРХИЯ"; 
	
	Запрос.УстановитьПараметр("ДатаСреза", Дата - 86400);
	
	ВыборкаГруппы = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаГруппы.Следующий() Цикл
		
		ВетвьГруппы = ДеревоПоказателей.ПолучитьЭлементы().Добавить();
		ЗаполнитьЗначенияСвойств(ВетвьГруппы, Выборка);
		ВетвьГруппы.Заголовок = ВыборкаГруппы.Наименование;
		ВетвьГруппы.ЭтоГруппа = Истина;
		
		ВыборкаСчетчик = ВыборкаГруппы.Выбрать();
		
		Пока ВыборкаСчетчик.Следующий() Цикл
			
			ВетвьСчетчика = ВетвьГруппы.ПолучитьЭлементы().Добавить();
			ЗаполнитьЗначенияСвойств(ВетвьСчетчика, ВыборкаСчетчик);
			ВетвьСчетчика.Заголовок = ВыборкаСчетчик.Наименование + ?(ЗначениеЗаполнено(ВыборкаСчетчик.СерийныйНомер), " (" + ВыборкаСчетчик.СерийныйНомер + ")", "");
			ВетвьСчетчика.Прирост = ВетвьСчетчика.ТекущееПоказание - ВетвьСчетчика.ПредыдущееПоказание;
			
		КонецЦикла;	
		
	КонецЦикла;	
	
КонецПроцедуры	


&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	РазвернутьВетвиДерева();
	
КонецПроцедуры

&НаКлиенте
Процедура РазвернутьВетвиДерева()
	
	Для Каждого Ветвь Из ДеревоПоказателей.ПолучитьЭлементы() Цикл
		Элементы.ДеревоПоказателей.Развернуть(Ветвь.ПолучитьИдентификатор());
	КонецЦикла;
	
КонецПроцедуры	

&НаКлиенте
Процедура ДеревоПоказателейТекущееПоказаниеПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.ДеревоПоказателей.ТекущиеДанные;
	ТекущиеДанные.Прирост = ТекущиеДанные.ТекущееПоказание - ТекущиеДанные.ПредыдущееПоказание;
	
КонецПроцедуры

