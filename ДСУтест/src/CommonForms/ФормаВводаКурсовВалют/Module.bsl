
// СОБЫТИЯ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	ДатаКурсов = ТекущаяДатаСеанса();
	ПредыдущаяДатаКурсов = ДатаКурсов;
	ОтрисоватьРеквизитыФормы();

КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)

	Если Модифицированность Тогда

		Ответ = ВопросАсинх("Данные были изменены. Сохранить изменения?", РежимДиалогаВопрос.ДаНетОтмена);

		Если Ответ = КодВозвратаДиалога.Да Тогда
			ЗаписатьНаСервере();
		ИначеЕсли Ответ = КодВозвратаДиалога.Отмена Тогда
			Отказ = Истина;
		КонецЕсли;

	КонецЕсли;

КонецПроцедуры

// тест коммита

// КОМАНДЫ ЭЛЕМЕНТОВ УПРАВЛЕНИЯ ФОРМЫ

&НаКлиенте
Процедура РеквизитПриИзменении()

	Модифицированность = Истина;

КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьКурсы(Команда)

	ЗаписатьНаСервере();
	Закрыть();

КонецПроцедуры

&НаКлиенте
Процедура ДатаКурсовПриИзменении(Элемент)

	Если Модифицированность Тогда

		Ответ = ВопросАсинх("Данные были изменены. Сохранить изменения?", РежимДиалогаВопрос.ДаНетОтмена);

		Если Ответ = КодВозвратаДиалога.Да Тогда
			ВременнаяДата = ДатаКурсов;
			ДатаКурсов = ПредыдущаяДатаКурсов;
			ЗаписатьНаСервере();
			ДатаКурсов = ВременнаяДата;
			ПеречитатьКурсыВалют();
		ИначеЕсли Ответ = КодВозвратаДиалога.Нет Тогда
			ПеречитатьКурсыВалют();
			Модифицированность = Ложь;
		ИначеЕсли Ответ = КодВозвратаДиалога.Отмена Тогда
			ДатаКурсов = ПредыдущаяДатаКурсов;
		КонецЕсли;

	Иначе

		ПеречитатьКурсыВалют();

	КонецЕсли;

	ПредыдущаяДатаКурсов = ДатаКурсов;

КонецПроцедуры

// СЛУЖЕБНЫЕ СЕРВЕРНЫЕ ПРОЦЕДУРЫ

// ОтрисоватьРеквизитыФормы - рисует данные курсов валют в виде реквизитов формы
&НаСервере
Процедура ОтрисоватьРеквизитыФормы()

	ОТКурсВалюты = Метаданные.РегистрыСведений.КурсыВалют.Ресурсы.Курс.Тип;
	ОТКратностьВалюты = Метаданные.РегистрыСведений.КурсыВалют.Ресурсы.Кратность.Тип;

	Массив = Новый Массив;

	ТаблицаВалют = ПолучитьТаблицуВалют(ДатаКурсов);
	
	// создадим реквизиты формы

	Итератор = 1;

	Для Каждого СтрокаВалюты Из ТаблицаВалют Цикл

		НоваяСтрокаРеквизита = ТаблицаКурсов.Добавить();
		НоваяСтрокаРеквизита.ИмяРеквизита = "Валюта" + Строка(Итератор);
		ЗаполнитьЗначенияСвойств(НоваяСтрокаРеквизита, СтрокаВалюты, "Наименование,ПредставлениеВалюты,Валюта,Курс,Кратность");

		РеквизитКурс = Новый РеквизитФормы("Курс_" + НоваяСтрокаРеквизита.ИмяРеквизита, ОТКурсВалюты, , "Курс");
		РеквизитКратность = Новый РеквизитФормы("Кратность_" + НоваяСтрокаРеквизита.ИмяРеквизита, ОТКратностьВалюты, ,
			"Кратность");
		Массив.Добавить(РеквизитКурс);
		Массив.Добавить(РеквизитКратность);

		Итератор = Итератор + 1;

	КонецЦикла;

	ИзменитьРеквизиты(Массив);
	
	// создадим элементы формы для отображения реквизитов

	Итератор = 1;

	Для Каждого СтрокаВалюты Из ТаблицаКурсов Цикл
		
		// создадим группу валюты
		ГруппаВалюты = Элементы.Добавить("Группа_" + СтрокаВалюты.ИмяРеквизита, Тип("ГруппаФормы"),
			Элементы.ГруппаКурсы);
		ГруппаВалюты.Вид = ВидГруппыФормы.ОбычнаяГруппа;
		ГруппаВалюты.Отображение = ОтображениеОбычнойГруппы.Нет;
		ГруппаВалюты.ОтображатьЗаголовок = Ложь;
		ГруппаВалюты.Группировка = ГруппировкаПодчиненныхЭлементовФормы.ГоризонтальнаяВсегда;
		
		// выведем название валюты
		НазваниеВалюты = Элементы.Добавить("Название_" + СтрокаВалюты.ИмяРеквизита, Тип("ДекорацияФормы"), ГруппаВалюты);
		НазваниеВалюты.Вид = ВидДекорацииФормы.Надпись;
		НазваниеВалюты.Заголовок = СтрокаВалюты.Наименование + " (" + СтрокаВалюты.ПредставлениеВалюты + ")";
		НазваниеВалюты.Ширина = 15;
		
		// добавим поле курса
		ПолеКурса = Элементы.Добавить("Курс_" + СтрокаВалюты.ИмяРеквизита, Тип("ПолеФормы"), ГруппаВалюты);
		ПолеКурса.ПутьКДанным = "Курс_" + СтрокаВалюты.ИмяРеквизита;
		ПолеКурса.Вид = ВидПоляФормы.ПолеВвода;
		ПолеКурса.Заголовок = "Курс";
		ПолеКурса.Ширина = 10;
		ПолеКурса.УстановитьДействие("ПриИзменении", "РеквизитПриИзменении");
		ЭтотОбъект["Курс_" + СтрокаВалюты.ИмяРеквизита] = СтрокаВалюты.Курс;
		
		// добавим поле кратности
		ПолеКратности = Элементы.Добавить("Кратность_" + СтрокаВалюты.ИмяРеквизита, Тип("ПолеФормы"), ГруппаВалюты);
		ПолеКратности.ПутьКДанным = "Кратность_" + СтрокаВалюты.ИмяРеквизита;
		ПолеКратности.Вид = ВидПоляФормы.ПолеВвода;
		ПолеКратности.Заголовок = "Кратность";
		ПолеКратности.Ширина = 5;
		ПолеКратности.УстановитьДействие("ПриИзменении", "РеквизитПриИзменении");
		ЭтотОбъект["Кратность_" + СтрокаВалюты.ИмяРеквизита] = СтрокаВалюты.Кратность;

		Итератор = Итератор + 1;

	КонецЦикла;

КонецПроцедуры

// ЗаписатьНаСервере - записывает данные о валютах в регистр сведений "Курсы валют"

Процедура ЗаписатьНаСервере()

	НаборЗаписей = РегистрыСведений.КурсыВалют.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Период.Установить(ДатаКурсов);
	НаборЗаписей.Прочитать();

	ТаблицаРегистра = НаборЗаписей.Выгрузить();
	ТаблицаРегистра.Очистить();

	Для Каждого СтрокаВалюты Из ТаблицаКурсов Цикл
		
		НоваяСтрока = ТаблицаРегистра.Добавить();
		НоваяСтрока.Период = ДатаКурсов;
		НоваяСтрока.Валюта = СтрокаВалюты.Валюта;
		НоваяСтрока.Курс = ЭтотОбъект["Курс_" + СтрокаВалюты.ИмяРеквизита];
		НоваяСтрока.Кратность = ЭтотОбъект["Кратность_" + СтрокаВалюты.ИмяРеквизита];
		
	КонецЦикла;

	НаборЗаписей.Загрузить(ТаблицаРегистра);
	НаборЗаписей.Записать();

	Модифицированность = Ложь;

КонецПроцедуры	

// Получить таблицу валют.
// получает курсы валют на конкретную дату
// Параметры:
//  ДатаКурсов - Дата - Дата курсов
// 
// Возвращаемое значение:
//  ТаблицаЗначений - Получить таблицу валют
&НаСервереБезКонтекста
Функция ПолучитьТаблицуВалют(ДатаКурсов)

	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	КурсыВалют.Валюта КАК Валюта,
	|	КурсыВалют.Курс Как Курс,
	|	КурсыВалют.Кратность
	|ПОМЕСТИТЬ КурсыВалют
	|ИЗ
	|	РегистрСведений.КурсыВалют КАК КурсыВалют
	|ГДЕ
	|	КурсыВалют.Период = &ДатаКурсов
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Валюта
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Валюты.Ссылка КАК Валюта,
	|	Валюты.Наименование Как Наименование,
	|	Валюты.ПредставлениеВалюты Как ПредставлениеВалюты,
	|	ЕСТЬNULL(КурсыВалют.Курс, 0) КАК Курс,
	|	ЕСТЬNULL(КурсыВалют.Кратность, 1) КАК Кратность
	|ИЗ
	|	Справочник.Валюты КАК Валюты
	|		ЛЕВОЕ СОЕДИНЕНИЕ КурсыВалют КАК КурсыВалют
	|		ПО Валюты.Ссылка = КурсыВалют.Валюта
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Константа.ОсновнаяВалютаУчета КАК ОсновнаяВалютаУчета
	|		ПО Валюты.Ссылка <> ОсновнаяВалютаУчета.Значение
	|ГДЕ
	|	Валюты.Используется";
	Запрос.УстановитьПараметр("ДатаКурсов", ДатаКурсов);
	Возврат Запрос.Выполнить().Выгрузить();

КонецФункции	

// ПеречитатьКурсыВалют - обновляет данные курсов валют на форме

// Перечитать курсы валют.
// обновляет данные курсов валют на форме
Процедура ПеречитатьКурсыВалют()

	Отбор = Новый Структура;
	ТаблицаВалют = ПолучитьТаблицуВалют(ДатаКурсов);

	Для Каждого СтрокаВалюты Из ТаблицаВалют Цикл

		Отбор.Вставить("Валюта", СтрокаВалюты.Валюта);
		МассивСтрок = ТаблицаКурсов.НайтиСтроки(Отбор);

		Если МассивСтрок.Количество() > 0 Тогда
			
			ТекущаяСтрока = МассивСтрок[0];
			ЭтотОбъект["Курс_" + ТекущаяСтрока.ИмяРеквизита] = СтрокаВалюты.Курс;
			ЭтотОбъект["Кратность_" + ТекущаяСтрока.ИмяРеквизита] = СтрокаВалюты.Кратность;
			
		КонецЕсли;

	КонецЦикла;

КонецПроцедуры