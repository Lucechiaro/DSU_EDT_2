&НаКлиенте
Перем ДниНедели;

&НаКлиенте
Асинх Процедура СписокДокументовПриАктивизацииСтроки(Элемент)
	
	Если ТекущаяСтрока <> Элемент.ТекущаяСтрока Тогда
		
		Если МодифицированностьДанных Тогда 
			
			Ответ = Ждать ВопросАсинх("Имеются несохраненные данные! Записать документ?", РежимДиалогаВопрос.ДаНетОтмена);
			
			Если Ответ = КодВозвратаДиалога.Да Тогда
				
				ЗаписатьДокумент("");
				Элементы.СписокДокументов.Обновить();
				ОбновитьДанныеДокумента(Элемент);
				
			ИначеЕсли Ответ = КодВозвратаДиалога.Нет Тогда
				
				МодифицированностьДанных = Ложь;
				ОбновитьДанныеДокумента(Элемент);
				
			Иначе 
				Элементы.СписокДокументов.ТекущаяСтрока = ДокументСсылка;
			КонецЕсли;	
			
		Иначе
			ОбновитьДанныеДокумента(Элемент); 
		КонецЕсли;
		
		ТекущаяСтрока = Элемент.ТекущаяСтрока;
		ДокументСсылка = Элементы.СписокДокументов.ТекущаяСтрока;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьДанныеДокумента(Элемент)
	
	ДокументСсылка = Элемент.ТекущаяСтрока;
	ЭтаФорма.ПодключитьОбработчикОжидания("ПрочитатьДокументНаСервереКлиент", 0.2, Истина);
	
КонецПроцедуры	

&НаКлиенте
Процедура ЗаписатьДокумент(Команда)
	
	Ссылка = ДокументСсылка;
	ДокументНаСервер = Документ;
	НовыйДокумент = ДокументСсылка.Пустая();
	ЗаписатьДокументНаСервере(ДокументНаСервер, Ссылка, РежимЗаписиДокумента.Запись);
	ДокументСсылка = Ссылка;
	
	Если НовыйДокумент Тогда
		СпозиционироватьсяНаНовомДокументе();
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура СпозиционироватьсяНаНовомДокументе()
	
	Элементы.СписокДокументов.ТекущаяСтрока = ДокументСсылка;
	
КонецПроцедуры		

&НаСервере
Процедура ЗаписатьДокументНаСервере(ДанныеФормы, Ссылка, РежимЗаписи)

	Объект = РеквизитФормыВЗначение("Документ");
	РежимЗаписиНовый = ?(Ссылка.Проведен Или РежимЗаписи = РежимЗаписиДокумента.Проведение, РежимЗаписиДокумента.Проведение, РежимЗаписиДокумента.Запись);
	
	Если Ссылка.Пустая() Тогда
		

			Объект.УстановитьНовыйНомер();
			Объект.Записать(РежимЗаписиНовый);
			Ссылка = Объект.Ссылка;

		
	Иначе  
		
		Объект.Записать(РежимЗаписиНовый);
			
	КонецЕсли;	
	
	МодифицированностьДанных = Ложь;
	ЗначениеВРеквизитФормы(Объект, "Документ");
	Элементы.СписокДокументов.Обновить();	

КонецПроцедуры

&НаКлиенте
Процедура ПрочитатьДокументНаСервереКлиент()
	
	ПрочитатьДокументНаСервере();
	ОбновитьНадписьДеньНедели();
	
КонецПроцедуры	

Процедура ПрочитатьДокументНаСервере()
	
	ДокументОбъект = ДокументСсылка.ПолучитьОбъект();
	ЗначениеВРеквизитФормы(ДокументОбъект, "Документ");
	
КонецПроцедуры	

&НаКлиенте
Асинх Процедура СоздатьДокумент(Команда)
	
	Если МодифицированностьДанных Тогда 
		
		Ответ = Ждать ВопросАсинх("Имеются несохраненные данные! Записать документ?", РежимДиалогаВопрос.ДаНетОтмена);
		
		Если Ответ = КодВозвратаДиалога.Да Тогда
			
			ЗаписатьДокумент("");
			Элементы.СписокДокументов.Обновить();
			ОчиститьРеквизитыФормыДокумента();
			ДокументСсылка = Документ.Ссылка;
			ЭтаФорма.ТекущийЭлемент = Элементы.Дата; 
			Документ.Дата = НачалоДня(ТекущаяДата());
			
		ИначеЕсли Ответ = КодВозвратаДиалога.Нет Тогда
			
			МодифицированностьДанных = Ложь;
			ОчиститьРеквизитыФормыДокумента();
			ЭтаФорма.ТекущийЭлемент = Элементы.Дата; 
			
		КонецЕсли;	
		
	Иначе
		
		ОчиститьРеквизитыФормыДокумента();
		ЭтаФорма.ТекущийЭлемент = Элементы.Дата; 
		Документ.Дата = НачалоДня(ТекущаяДата());
		
	КонецЕсли;
	
	ОбновитьНадписьДеньНедели();
	
КонецПроцедуры

Процедура ОчиститьРеквизитыФормыДокумента()
	
	ДокументОбъект = Документы.РасходДенежныхСредств.СоздатьДокумент();
	ЗначениеВРеквизитФормы(ДокументОбъект, "Документ");
	Документ.Валюта = ОбщегоНазначенияВызовСервера.ПолучитьОсновнуюВалютуУчета();
	Документ.Дата = ТекущаяДата();
	Документ.Кратность = 1;
	Документ.Курс = 1;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьМодифицированностьДанных()
	
	МодифицированностьДанных = Истина;
	
КонецПроцедуры	

&НаКлиенте
Процедура СчетПриИзменении(Элемент)
	УстановитьМодифицированностьДанных();
КонецПроцедуры

&НаКлиенте
Процедура СтатьяДДСПриИзменении(Элемент)
	УстановитьМодифицированностьДанных();
КонецПроцедуры

&НаКлиенте
Процедура СуммаПриИзменении(Элемент)
	УстановитьМодифицированностьДанных();
КонецПроцедуры

&НаКлиенте
Процедура ВалютаПриИзменении(Элемент)
	УстановитьМодифицированностьДанных();
КонецПроцедуры

&НаКлиенте
Процедура КурсПриИзменении(Элемент)
	УстановитьМодифицированностьДанных();
КонецПроцедуры

&НаКлиенте
Процедура КратностьПриИзменении(Элемент)
	УстановитьМодифицированностьДанных();
КонецПроцедуры

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	
	УстановитьМодифицированностьДанных();
	ОбновитьНадписьДеньНедели();
	
КонецПроцедуры

&НаКлиенте
Процедура ПланируемаяПокупкаПриИзменении(Элемент)
	УстановитьМодифицированностьДанных();
КонецПроцедуры

&НаКлиенте
Процедура ДолжникПриИзменении(Элемент)
	УстановитьМодифицированностьДанных();
КонецПроцедуры

&НаКлиенте
Процедура КомментарийПриИзменении(Элемент)
	УстановитьМодифицированностьДанных();
КонецПроцедуры

&НаКлиенте
Процедура ПровестиДокумент(Команда)
	
	Ссылка = ДокументСсылка;
	ДокументНаСервер = Документ;
	НовыйДокумент = ДокументСсылка.Пустая();
	ЗаписатьДокументНаСервере(ДокументНаСервер, Ссылка, РежимЗаписиДокумента.Проведение);
	ДокументСсылка = Ссылка;
	Элементы.СписокДокументов.Обновить();
		
	Если НовыйДокумент Тогда
		СпозиционироватьсяНаНовомДокументе();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтменитьПроведение(Команда)
	
	Если ДокументСсылка.Пустая() Тогда
		Сообщить("Невозможно распровести незаписанный документ!");
	Иначе
		Ссылка = ДокументСсылка;
		ДокументНаСервер = Документ;
		ЗаписатьДокументНаСервере(ДокументНаСервер, Ссылка, РежимЗаписиДокумента.ОтменаПроведения);
		ДокументСсылка = Ссылка;
		Элементы.СписокДокументов.Обновить();
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ПометитьДокументНаУдаление(Команда)
	
	Если ДокументСсылка.Пустая() Тогда
		Сообщить("Невозможно пометить на удаление незаписанный документ!");
	Иначе
		УстановитьПометкуНаУдаление();
		Элементы.СписокДокументов.Обновить();
	КонецЕсли;	
	
КонецПроцедуры

Процедура УстановитьПометкуНаУдаление()
	
	ДокументОбъект = ДокументСсылка.ПолучитьОбъект();
	ДокументОбъект.УстановитьПометкуУдаления(Не ДокументОбъект.ПометкаУдаления);
	
КонецПроцедуры	

Функция ПолучитьТочкуАктуальности()
	
	Возврат ПараметрыСеанса.ТочкаАктуальности;
	
КонецФункции	

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	СтрокаДанных = ПолучитьТочкуАктуальности();
	Элементы.НадписьТочкаАктуальности.Заголовок = "Точка актуальности: " + Формат(СтрокаДанных.Дата, "ДФ=dd.MM.yyyy") + " (" + ПолучитьПредставлениеДняНедели(ДеньНедели(СтрокаДанных.Дата)) + ")   Сумма: " + Формат(СтрокаДанных.Сумма, "ЧДЦ=0; ЧРГ=") + " руб.";

КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьПредставлениеДняНедели(НомерДня)
	
	Если НомерДня = 1 Тогда
		ПредставлениеДня = "Понедельник";
	ИначеЕсли НомерДня = 2 Тогда
		ПредставлениеДня = "Вторник";
	ИначеЕсли НомерДня = 3 Тогда
		ПредставлениеДня = "Среда";
	ИначеЕсли НомерДня = 4 Тогда
		ПредставлениеДня = "Четверг";
	ИначеЕсли НомерДня = 5 Тогда
		ПредставлениеДня = "Пятница";
	ИначеЕсли НомерДня = 6 Тогда
		ПредставлениеДня = "Суббота";
	ИначеЕсли НомерДня = 7 Тогда
		ПредставлениеДня = "Воскресенье";
	КонецЕсли;	
	
	Возврат ПредставлениеДня
	
КонецФункции	

&НаКлиенте
Процедура СместитьДатуНазад(Команда)
	
	Документ.Дата = НачалоДня(Документ.Дата) - 24*60*60;
	ОбновитьНадписьДеньНедели();
	
КонецПроцедуры

&НаКлиенте
Процедура СместитьДатуВперед(Команда)
	
	Документ.Дата = НачалоДня(Документ.Дата) + 24*60*60;
	ОбновитьНадписьДеньНедели();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьНадписьДеньНедели()
	
	Элементы.ДеньНедели.Заголовок = ДниНедели.Получить(ДеньНедели(Документ.Дата));
	
КонецПроцедуры	

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ДниНедели = Новый Соответствие;
	ДниНедели.Вставить(0, "");
	ДниНедели.Вставить(1, "Понедельник");
	ДниНедели.Вставить(2, "Вторник");
	ДниНедели.Вставить(3, "Среда");
	ДниНедели.Вставить(4, "Четверг");
	ДниНедели.Вставить(5, "Пятница");
	ДниНедели.Вставить(6, "Суббота");
	ДниНедели.Вставить(7, "Воскресенье");
	
КонецПроцедуры
