#Область ОписаниеПеременных

&НаКлиенте
Перем ДниНедели;

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	СтрокаДанных = ПолучитьТочкуАктуальности();
	Элементы.НадписьТочкаАктуальности.Заголовок = "Точка актуальности: " + Формат(СтрокаДанных.Дата, "ДФ=dd.MM.yyyy") + " (" + ПолучитьПредставлениеДняНедели(ДеньНедели(СтрокаДанных.Дата)) + ")   Сумма: " + Формат(СтрокаДанных.Сумма, "ЧДЦ=0; ЧРГ=") + " руб.";
	УстановитьПараметрыВыбораЭлементов();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ДниНедели = Новый Соответствие;
	ДниНедели.Вставить(0, "");
	ДниНедели.Вставить(1, "Понедельник");
	ДниНедели.Вставить(2, "Вторник");
	ДниНедели.Вставить(3, "Среда");
	ДниНедели.Вставить(4, "Четверг");
	ДниНедели.Вставить(5, "Пятница");
	ДниНедели.Вставить(6, "Суббота");
	ДниНедели.Вставить(7, "Воскресенье");
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура СчетПриИзменении(Элемент)
	УстановитьМодифицированностьДанных();
КонецПроцедуры

&НаКлиенте
Процедура СтатьяДДСПриИзменении(Элемент)
	УстановитьМодифицированностьДанных();
КонецПроцедуры

&НаКлиенте
Процедура СуммаПриИзменении(Элемент)
	УстановитьМодифицированностьДанных();
КонецПроцедуры

&НаКлиенте
Процедура ВалютаПриИзменении(Элемент)
	УстановитьМодифицированностьДанных();
КонецПроцедуры

&НаКлиенте
Процедура КурсПриИзменении(Элемент)
	УстановитьМодифицированностьДанных();
КонецПроцедуры

&НаКлиенте
Процедура КратностьПриИзменении(Элемент)
	УстановитьМодифицированностьДанных();
КонецПроцедуры

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	
	УстановитьМодифицированностьДанных();
	ОбновитьНадписьДеньНедели();
	
КонецПроцедуры

&НаКлиенте
Процедура ПланируемаяПокупкаПриИзменении(Элемент)
	УстановитьМодифицированностьДанных();
КонецПроцедуры

&НаКлиенте
Процедура ДолжникПриИзменении(Элемент)
	УстановитьМодифицированностьДанных();
КонецПроцедуры

&НаКлиенте
Процедура КомментарийПриИзменении(Элемент)
	УстановитьМодифицированностьДанных();
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиСобытийЭлементовТаблицыФормыСписокДокументов

&НаКлиенте
Асинх Процедура СписокДокументовПриАктивизацииСтроки(Элемент)
	
	Если ТекущаяСтрока <> Элемент.ТекущаяСтрока Тогда
		
		Если МодифицированностьДанных Тогда 
			
			Ответ = Ждать ВопросАсинх("Имеются несохраненные данные! Записать документ?", РежимДиалогаВопрос.ДаНетОтмена);
			
			Если Ответ = КодВозвратаДиалога.Да Тогда
				
				ЗаписатьДокументНаКлиенте();
				ОбновитьДанныеДокумента(Элемент);
				
			ИначеЕсли Ответ = КодВозвратаДиалога.Нет Тогда
				
				МодифицированностьДанных = Ложь;
				ОбновитьДанныеДокумента(Элемент);
				
			Иначе 
				Элементы.СписокДокументов.ТекущаяСтрока = ДокументСсылка;
			КонецЕсли;	
			
		Иначе
			ОбновитьДанныеДокумента(Элемент); 
		КонецЕсли;
		
		ТекущаяСтрока = Элемент.ТекущаяСтрока;
		ДокументСсылка = Элементы.СписокДокументов.ТекущаяСтрока;
		
	КонецЕсли;
	
КонецПроцедуры



#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗаписатьДокумент(Команда)
	
	ЗаписатьДокументНаКлиенте();
	
КонецПроцедуры

&НаКлиенте
Асинх Процедура СоздатьДокумент(Команда)
	
	Если МодифицированностьДанных Тогда 
		
		Ответ = Ждать ВопросАсинх("Имеются несохраненные данные! Записать документ?", РежимДиалогаВопрос.ДаНетОтмена);
		
		Если Ответ = КодВозвратаДиалога.Да Тогда
			
			ЗаписатьДокументНаКлиенте();
			ОчиститьРеквизитыФормыДокумента();
			ТекущийЭлемент = Элементы.Дата; 
			Документ.Дата = НачалоДня(ТекущаяДата());
			
		ИначеЕсли Ответ = КодВозвратаДиалога.Нет Тогда
			
			МодифицированностьДанных = Ложь;
			ОчиститьРеквизитыФормыДокумента();
			ТекущийЭлемент = Элементы.Дата; 
			
		КонецЕсли;	
		
	Иначе
		
		ОчиститьРеквизитыФормыДокумента();
		ТекущийЭлемент = Элементы.Дата; 
		Документ.Дата = НачалоДня(ТекущаяДата());
		
	КонецЕсли;
	
	ОбновитьНадписьДеньНедели();
		
КонецПроцедуры

&НаКлиенте
Процедура ПровестиДокумент(Команда)
	
	НовыйДокумент = ДокументСсылка.Пустая();
	ЗаписатьДокументНаСервере(РежимЗаписиДокумента.Проведение);
	
	Элементы.СписокДокументов.Обновить();
		
	Если НовыйДокумент Тогда
		СпозиционироватьсяНаНовомДокументе();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтменитьПроведение(Команда)
	
	Если ДокументСсылка.Пустая() Тогда
		Сообщить("Невозможно распровести незаписанный документ!");
	Иначе
		ЗаписатьДокументНаСервере(РежимЗаписиДокумента.ОтменаПроведения);
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ПометитьДокументНаУдаление(Команда)
	
	Если ДокументСсылка.Пустая() Тогда
		Сообщить("Невозможно пометить на удаление незаписанный документ!");
	Иначе
		УстановитьПометкуНаУдаление();
		Элементы.СписокДокументов.Обновить();
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура СместитьДатуНазад(Команда)
	
	Документ.Дата = НачалоДня(Документ.Дата) - 24*60*60;
	ОбновитьНадписьДеньНедели();
	
КонецПроцедуры

&НаКлиенте
Процедура СместитьДатуВперед(Команда)
	
	Документ.Дата = НачалоДня(Документ.Дата) + 24*60*60;
	ОбновитьНадписьДеньНедели();
	
КонецПроцедуры


#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ОбновитьДанныеДокумента(Элемент)
	
	ДокументСсылка = Элемент.ТекущаяСтрока;
	ПодключитьОбработчикОжидания("ПрочитатьДокументНаСервереКлиент", 0.2, Истина);

КонецПроцедуры	

&НаКлиенте
Процедура ЗаписатьДокументНаКлиенте()
	
	НовыйДокумент = ДокументСсылка.Пустая();
	ЗаписатьДокументНаСервере(РежимЗаписиДокумента.Запись);

	Если НовыйДокумент Тогда
		СпозиционироватьсяНаНовомДокументе();
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура СпозиционироватьсяНаНовомДокументе()
	
	Элементы.СписокДокументов.ТекущаяСтрока = ДокументСсылка;
	
КонецПроцедуры	

&НаСервере
Процедура ЗаписатьДокументНаСервере(Знач РежимЗаписи)

	ДокументОбъект = РеквизитФормыВЗначение("Документ");
	
	Если ДокументСсылка.Проведен Или РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		РежимЗаписи = РежимЗаписиДокумента.Проведение;
	Иначе
		РежимЗаписи = РежимЗаписиДокумента.Запись;
	КонецЕсли;		
	
	ДокументОбъект.Записать(РежимЗаписи);
	ДокументСсылка = ДокументОбъект.Ссылка;
	ЗначениеВРеквизитФормы(ДокументОбъект, "Документ");
	
	Элементы.СписокДокументов.Обновить();
	МодифицированностьДанных = Ложь;	

КонецПроцедуры

&НаКлиенте
Процедура ПрочитатьДокументНаСервереКлиент()
	
	ПрочитатьДокументНаСервере();
	ОбновитьНадписьДеньНедели();
	
КонецПроцедуры	

&НаСервере
Процедура ПрочитатьДокументНаСервере()
	
	ДокументОбъект = ДокументСсылка.ПолучитьОбъект();
	ЗначениеВРеквизитФормы(ДокументОбъект, "Документ");
	
КонецПроцедуры	

&НаСервере
Процедура ОчиститьРеквизитыФормыДокумента()
	
	ДокументОбъект = Документы.РасходДенежныхСредств.СоздатьДокумент();
	ЗначениеВРеквизитФормы(ДокументОбъект, "Документ");
	Документ.Валюта = ОбщегоНазначенияВызовСервера.ПолучитьОсновнуюВалютуУчета();
	Документ.Дата = ТекущаяДатаСеанса();
	Документ.Кратность = 1;
	Документ.Курс = 1;
	ДокументСсылка = Неопределено;
	НеПеречитыватьДанныеДокумента = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьМодифицированностьДанных()
	
	МодифицированностьДанных = Истина;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьПометкуНаУдаление()
	
	ДокументОбъект = ДокументСсылка.ПолучитьОбъект();
	ДокументОбъект.УстановитьПометкуУдаления(Не ДокументОбъект.ПометкаУдаления);
	
КонецПроцедуры	

&НаСервереБезКонтекста
Функция ПолучитьТочкуАктуальности()
	
	Возврат ПараметрыСеанса.ТочкаАктуальности;
	
КонецФункции	

&НаСервереБезКонтекста
Функция ПолучитьПредставлениеДняНедели(НомерДня)
	
	Если НомерДня = 1 Тогда
		ПредставлениеДня = "Понедельник";
	ИначеЕсли НомерДня = 2 Тогда
		ПредставлениеДня = "Вторник";
	ИначеЕсли НомерДня = 3 Тогда
		ПредставлениеДня = "Среда";
	ИначеЕсли НомерДня = 4 Тогда
		ПредставлениеДня = "Четверг";
	ИначеЕсли НомерДня = 5 Тогда
		ПредставлениеДня = "Пятница";
	ИначеЕсли НомерДня = 6 Тогда
		ПредставлениеДня = "Суббота";
	ИначеЕсли НомерДня = 7 Тогда
		ПредставлениеДня = "Воскресенье";
	КонецЕсли;	
	
	Возврат ПредставлениеДня
	
КонецФункции	

&НаКлиенте
Процедура ОбновитьНадписьДеньНедели()
	
	Элементы.ДеньНедели.Заголовок = ДниНедели.Получить(ДеньНедели(Документ.Дата));
	
КонецПроцедуры	

&НаСервере
Процедура УстановитьПараметрыВыбораЭлементов()
	
	ПараметрВыбора = Новый ПараметрВыбора("Отбор.Используется", Истина);
	МассивПараметров = Новый Массив();
	МассивПараметров.Добавить(ПараметрВыбора);
	// todo - ограничить выбор неиспользуемых счетов и валют при выборе и вводе по строке
	//Элементы.Валюта.ПараметрыВыбора = Новый ФиксированныйМассив(МассивПараметров);
	//Элементы.Счет.ПараметрыВыбора = Новый ФиксированныйМассив(МассивПараметров);
	
КонецПроцедуры	

#КонецОбласти