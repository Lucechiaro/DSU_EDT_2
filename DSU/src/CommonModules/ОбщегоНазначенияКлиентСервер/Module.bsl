
#Область ПрограммныйИнтерфейс

Процедура СообщитьПользователю(ТекстСообщения) Экспорт
	
	Сообщение = Новый СообщениеПользователю();
	Сообщение.Текст = ТекстСообщения;
	Сообщение.Сообщить();
	
КонецПроцедуры

Процедура УстановитьПараметрДанных(КоллецияПараметров, ИмяПараметра, Значение) Экспорт
	
	Параметр = КоллецияПараметров.Элементы.Найти(ИмяПараметра);
	Если Параметр <> Неопределено Тогда
		Параметр.Значение = Значение;
		Параметр.Использование = Истина;
	КонецЕсли;
	
КонецПроцедуры

Процедура УстановитьЭлементПользовательскихНастроек(Настройки, ИмяПараметра, ЗначениеПараметра) Экспорт
	
	ВыборкаПараметров = Настройки.Элементы;
	Параметр = Новый ПараметрКомпоновкиДанных(ИмяПараметра);
	
	Для Каждого ТекЭлемент Из ВыборкаПараметров Цикл
		
		Если ТипЗнч(ТекЭлемент) = Тип("ЗначениеПараметраНастроекКомпоновкиДанных") Тогда
			
			Если ТекЭлемент.Параметр = Параметр Тогда
				ТекЭлемент.Значение = ЗначениеПараметра;
				ТекЭлемент.Использование = Истина;
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура УстановитьЭлементОтбора(Настройки, ИмяПараметра, ЗначениеПараметра, ВидСравнения = Неопределено) Экспорт
	
	Если ВидСравнения = Неопределено Тогда
		ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	КонецЕсли;	
	
	ВыборкаПараметров = Настройки.Элементы;
	Параметр = Новый ПолеКомпоновкиДанных(ИмяПараметра);
	
	Для Каждого ТекЭлемент Из ВыборкаПараметров Цикл
		
		Если ТипЗнч(ТекЭлемент) = Тип("ЭлементОтбораКомпоновкиДанных") Тогда
		
			Если ТекЭлемент.ЛевоеЗначение = Параметр Тогда
			
				ТекЭлемент.ПравоеЗначение = ЗначениеПараметра;
				ТекЭлемент.ВидСравнения = ВидСравнения;
				ТекЭлемент.Использование = Истина;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти
